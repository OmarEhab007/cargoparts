name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'

jobs:
  # ============================================
  # Pre-deployment Checks
  # ============================================
  pre-deploy:
    name: Pre-deployment Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run all checks
        run: |
          npm run lint
          npm run type-check
          npm run test
          npm run build

  # ============================================
  # Deploy to Production
  # ============================================
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: pre-deploy
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}

  # ============================================
  # Post-deployment Tests
  # ============================================
  post-deploy:
    name: Post-deployment Tests
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Wait for deployment
        run: sleep 30

      - name: Health check
        run: |
          curl -f ${{ secrets.PRODUCTION_URL }}/api/health || exit 1

      - name: Run smoke tests
        run: |
          npx playwright test --grep "smoke"
        env:
          PLAYWRIGHT_BASE_URL: ${{ secrets.PRODUCTION_URL }}

  # ============================================
  # Notify Deployment
  # ============================================
  notify:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: [deploy, post-deploy]
    if: always()

    steps:
      - name: Notify success
        if: needs.deploy.result == 'success' && needs.post-deploy.result == 'success'
        run: |
          echo "üéâ Deployment successful!"
          echo "üîó Production URL: ${{ secrets.PRODUCTION_URL }}"

      - name: Notify failure
        if: needs.deploy.result == 'failure' || needs.post-deploy.result == 'failure'
        run: |
          echo "‚ùå Deployment failed!"
          echo "Please check the logs and fix the issues."